/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ClusterShadingStage!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE



//! access the type of the class
inline
OSG::FieldContainerType &ClusterShadingStageBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 ClusterShadingStageBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 ClusterShadingStageBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the ClusterShadingStage::_sfBlockSize field.

inline
UInt32 &ClusterShadingStageBase::editBlockSize(void)
{
    editSField(BlockSizeFieldMask);

    return _sfBlockSize.getValue();
}

//! Get the value of the ClusterShadingStage::_sfBlockSize field.
inline
      UInt32  ClusterShadingStageBase::getBlockSize(void) const
{
    return _sfBlockSize.getValue();
}

//! Set the value of the ClusterShadingStage::_sfBlockSize field.
inline
void ClusterShadingStageBase::setBlockSize(const UInt32 value)
{
    editSField(BlockSizeFieldMask);

    _sfBlockSize.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfTileSize field.

inline
UInt32 &ClusterShadingStageBase::editTileSize(void)
{
    editSField(TileSizeFieldMask);

    return _sfTileSize.getValue();
}

//! Get the value of the ClusterShadingStage::_sfTileSize field.
inline
      UInt32  ClusterShadingStageBase::getTileSize(void) const
{
    return _sfTileSize.getValue();
}

//! Set the value of the ClusterShadingStage::_sfTileSize field.
inline
void ClusterShadingStageBase::setTileSize(const UInt32 value)
{
    editSField(TileSizeFieldMask);

    _sfTileSize.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfNumClusterZ field.

inline
UInt32 &ClusterShadingStageBase::editNumClusterZ(void)
{
    editSField(NumClusterZFieldMask);

    return _sfNumClusterZ.getValue();
}

//! Get the value of the ClusterShadingStage::_sfNumClusterZ field.
inline
      UInt32  ClusterShadingStageBase::getNumClusterZ(void) const
{
    return _sfNumClusterZ.getValue();
}

//! Set the value of the ClusterShadingStage::_sfNumClusterZ field.
inline
void ClusterShadingStageBase::setNumClusterZ(const UInt32 value)
{
    editSField(NumClusterZFieldMask);

    _sfNumClusterZ.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfNearPlaneOffset field.

inline
Real32 &ClusterShadingStageBase::editNearPlaneOffset(void)
{
    editSField(NearPlaneOffsetFieldMask);

    return _sfNearPlaneOffset.getValue();
}

//! Get the value of the ClusterShadingStage::_sfNearPlaneOffset field.
inline
      Real32  ClusterShadingStageBase::getNearPlaneOffset(void) const
{
    return _sfNearPlaneOffset.getValue();
}

//! Set the value of the ClusterShadingStage::_sfNearPlaneOffset field.
inline
void ClusterShadingStageBase::setNearPlaneOffset(const Real32 value)
{
    editSField(NearPlaneOffsetFieldMask);

    _sfNearPlaneOffset.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfDispatchDataBindingPnt field.

inline
UInt32 &ClusterShadingStageBase::editDispatchDataBindingPnt(void)
{
    editSField(DispatchDataBindingPntFieldMask);

    return _sfDispatchDataBindingPnt.getValue();
}

//! Get the value of the ClusterShadingStage::_sfDispatchDataBindingPnt field.
inline
      UInt32  ClusterShadingStageBase::getDispatchDataBindingPnt(void) const
{
    return _sfDispatchDataBindingPnt.getValue();
}

//! Set the value of the ClusterShadingStage::_sfDispatchDataBindingPnt field.
inline
void ClusterShadingStageBase::setDispatchDataBindingPnt(const UInt32 value)
{
    editSField(DispatchDataBindingPntFieldMask);

    _sfDispatchDataBindingPnt.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfClusterDataBindingPnt field.

inline
UInt32 &ClusterShadingStageBase::editClusterDataBindingPnt(void)
{
    editSField(ClusterDataBindingPntFieldMask);

    return _sfClusterDataBindingPnt.getValue();
}

//! Get the value of the ClusterShadingStage::_sfClusterDataBindingPnt field.
inline
      UInt32  ClusterShadingStageBase::getClusterDataBindingPnt(void) const
{
    return _sfClusterDataBindingPnt.getValue();
}

//! Set the value of the ClusterShadingStage::_sfClusterDataBindingPnt field.
inline
void ClusterShadingStageBase::setClusterDataBindingPnt(const UInt32 value)
{
    editSField(ClusterDataBindingPntFieldMask);

    _sfClusterDataBindingPnt.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfLightBindingPnt field.

inline
UInt32 &ClusterShadingStageBase::editLightBindingPnt(void)
{
    editSField(LightBindingPntFieldMask);

    return _sfLightBindingPnt.getValue();
}

//! Get the value of the ClusterShadingStage::_sfLightBindingPnt field.
inline
      UInt32  ClusterShadingStageBase::getLightBindingPnt(void) const
{
    return _sfLightBindingPnt.getValue();
}

//! Set the value of the ClusterShadingStage::_sfLightBindingPnt field.
inline
void ClusterShadingStageBase::setLightBindingPnt(const UInt32 value)
{
    editSField(LightBindingPntFieldMask);

    _sfLightBindingPnt.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfAffectedLightIndexListBindingPnt field.

inline
UInt32 &ClusterShadingStageBase::editAffectedLightIndexListBindingPnt(void)
{
    editSField(AffectedLightIndexListBindingPntFieldMask);

    return _sfAffectedLightIndexListBindingPnt.getValue();
}

//! Get the value of the ClusterShadingStage::_sfAffectedLightIndexListBindingPnt field.
inline
      UInt32  ClusterShadingStageBase::getAffectedLightIndexListBindingPnt(void) const
{
    return _sfAffectedLightIndexListBindingPnt.getValue();
}

//! Set the value of the ClusterShadingStage::_sfAffectedLightIndexListBindingPnt field.
inline
void ClusterShadingStageBase::setAffectedLightIndexListBindingPnt(const UInt32 value)
{
    editSField(AffectedLightIndexListBindingPntFieldMask);

    _sfAffectedLightIndexListBindingPnt.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfFrustumBindingPnt field.

inline
UInt32 &ClusterShadingStageBase::editFrustumBindingPnt(void)
{
    editSField(FrustumBindingPntFieldMask);

    return _sfFrustumBindingPnt.getValue();
}

//! Get the value of the ClusterShadingStage::_sfFrustumBindingPnt field.
inline
      UInt32  ClusterShadingStageBase::getFrustumBindingPnt(void) const
{
    return _sfFrustumBindingPnt.getValue();
}

//! Set the value of the ClusterShadingStage::_sfFrustumBindingPnt field.
inline
void ClusterShadingStageBase::setFrustumBindingPnt(const UInt32 value)
{
    editSField(FrustumBindingPntFieldMask);

    _sfFrustumBindingPnt.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfLightIndexListBindingPnt field.

inline
UInt32 &ClusterShadingStageBase::editLightIndexListBindingPnt(void)
{
    editSField(LightIndexListBindingPntFieldMask);

    return _sfLightIndexListBindingPnt.getValue();
}

//! Get the value of the ClusterShadingStage::_sfLightIndexListBindingPnt field.
inline
      UInt32  ClusterShadingStageBase::getLightIndexListBindingPnt(void) const
{
    return _sfLightIndexListBindingPnt.getValue();
}

//! Set the value of the ClusterShadingStage::_sfLightIndexListBindingPnt field.
inline
void ClusterShadingStageBase::setLightIndexListBindingPnt(const UInt32 value)
{
    editSField(LightIndexListBindingPntFieldMask);

    _sfLightIndexListBindingPnt.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfLightIndexCounterBindingPnt field.

inline
UInt32 &ClusterShadingStageBase::editLightIndexCounterBindingPnt(void)
{
    editSField(LightIndexCounterBindingPntFieldMask);

    return _sfLightIndexCounterBindingPnt.getValue();
}

//! Get the value of the ClusterShadingStage::_sfLightIndexCounterBindingPnt field.
inline
      UInt32  ClusterShadingStageBase::getLightIndexCounterBindingPnt(void) const
{
    return _sfLightIndexCounterBindingPnt.getValue();
}

//! Set the value of the ClusterShadingStage::_sfLightIndexCounterBindingPnt field.
inline
void ClusterShadingStageBase::setLightIndexCounterBindingPnt(const UInt32 value)
{
    editSField(LightIndexCounterBindingPntFieldMask);

    _sfLightIndexCounterBindingPnt.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfLightGridBindingPnt field.

inline
UInt32 &ClusterShadingStageBase::editLightGridBindingPnt(void)
{
    editSField(LightGridBindingPntFieldMask);

    return _sfLightGridBindingPnt.getValue();
}

//! Get the value of the ClusterShadingStage::_sfLightGridBindingPnt field.
inline
      UInt32  ClusterShadingStageBase::getLightGridBindingPnt(void) const
{
    return _sfLightGridBindingPnt.getValue();
}

//! Set the value of the ClusterShadingStage::_sfLightGridBindingPnt field.
inline
void ClusterShadingStageBase::setLightGridBindingPnt(const UInt32 value)
{
    editSField(LightGridBindingPntFieldMask);

    _sfLightGridBindingPnt.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfAffectedLightIndexListBlockName field.

inline
std::string &ClusterShadingStageBase::editAffectedLightIndexListBlockName(void)
{
    editSField(AffectedLightIndexListBlockNameFieldMask);

    return _sfAffectedLightIndexListBlockName.getValue();
}

//! Get the value of the ClusterShadingStage::_sfAffectedLightIndexListBlockName field.
inline
const std::string &ClusterShadingStageBase::getAffectedLightIndexListBlockName(void) const
{
    return _sfAffectedLightIndexListBlockName.getValue();
}

//! Set the value of the ClusterShadingStage::_sfAffectedLightIndexListBlockName field.
inline
void ClusterShadingStageBase::setAffectedLightIndexListBlockName(const std::string &value)
{
    editSField(AffectedLightIndexListBlockNameFieldMask);

    _sfAffectedLightIndexListBlockName.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfAffectedLightIndexListVariableName field.

inline
std::string &ClusterShadingStageBase::editAffectedLightIndexListVariableName(void)
{
    editSField(AffectedLightIndexListVariableNameFieldMask);

    return _sfAffectedLightIndexListVariableName.getValue();
}

//! Get the value of the ClusterShadingStage::_sfAffectedLightIndexListVariableName field.
inline
const std::string &ClusterShadingStageBase::getAffectedLightIndexListVariableName(void) const
{
    return _sfAffectedLightIndexListVariableName.getValue();
}

//! Set the value of the ClusterShadingStage::_sfAffectedLightIndexListVariableName field.
inline
void ClusterShadingStageBase::setAffectedLightIndexListVariableName(const std::string &value)
{
    editSField(AffectedLightIndexListVariableNameFieldMask);

    _sfAffectedLightIndexListVariableName.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfLightIndexListBlockName field.

inline
std::string &ClusterShadingStageBase::editLightIndexListBlockName(void)
{
    editSField(LightIndexListBlockNameFieldMask);

    return _sfLightIndexListBlockName.getValue();
}

//! Get the value of the ClusterShadingStage::_sfLightIndexListBlockName field.
inline
const std::string &ClusterShadingStageBase::getLightIndexListBlockName(void) const
{
    return _sfLightIndexListBlockName.getValue();
}

//! Set the value of the ClusterShadingStage::_sfLightIndexListBlockName field.
inline
void ClusterShadingStageBase::setLightIndexListBlockName(const std::string &value)
{
    editSField(LightIndexListBlockNameFieldMask);

    _sfLightIndexListBlockName.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfLightIndexListVariableName field.

inline
std::string &ClusterShadingStageBase::editLightIndexListVariableName(void)
{
    editSField(LightIndexListVariableNameFieldMask);

    return _sfLightIndexListVariableName.getValue();
}

//! Get the value of the ClusterShadingStage::_sfLightIndexListVariableName field.
inline
const std::string &ClusterShadingStageBase::getLightIndexListVariableName(void) const
{
    return _sfLightIndexListVariableName.getValue();
}

//! Set the value of the ClusterShadingStage::_sfLightIndexListVariableName field.
inline
void ClusterShadingStageBase::setLightIndexListVariableName(const std::string &value)
{
    editSField(LightIndexListVariableNameFieldMask);

    _sfLightIndexListVariableName.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfClusteringDataBlockName field.

inline
std::string &ClusterShadingStageBase::editClusteringDataBlockName(void)
{
    editSField(ClusteringDataBlockNameFieldMask);

    return _sfClusteringDataBlockName.getValue();
}

//! Get the value of the ClusterShadingStage::_sfClusteringDataBlockName field.
inline
const std::string &ClusterShadingStageBase::getClusteringDataBlockName(void) const
{
    return _sfClusteringDataBlockName.getValue();
}

//! Set the value of the ClusterShadingStage::_sfClusteringDataBlockName field.
inline
void ClusterShadingStageBase::setClusteringDataBlockName(const std::string &value)
{
    editSField(ClusteringDataBlockNameFieldMask);

    _sfClusteringDataBlockName.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfClusteringDataVariableName field.

inline
std::string &ClusterShadingStageBase::editClusteringDataVariableName(void)
{
    editSField(ClusteringDataVariableNameFieldMask);

    return _sfClusteringDataVariableName.getValue();
}

//! Get the value of the ClusterShadingStage::_sfClusteringDataVariableName field.
inline
const std::string &ClusterShadingStageBase::getClusteringDataVariableName(void) const
{
    return _sfClusteringDataVariableName.getValue();
}

//! Set the value of the ClusterShadingStage::_sfClusteringDataVariableName field.
inline
void ClusterShadingStageBase::setClusteringDataVariableName(const std::string &value)
{
    editSField(ClusteringDataVariableNameFieldMask);

    _sfClusteringDataVariableName.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfLightGridVariableName field.

inline
std::string &ClusterShadingStageBase::editLightGridVariableName(void)
{
    editSField(LightGridVariableNameFieldMask);

    return _sfLightGridVariableName.getValue();
}

//! Get the value of the ClusterShadingStage::_sfLightGridVariableName field.
inline
const std::string &ClusterShadingStageBase::getLightGridVariableName(void) const
{
    return _sfLightGridVariableName.getValue();
}

//! Set the value of the ClusterShadingStage::_sfLightGridVariableName field.
inline
void ClusterShadingStageBase::setLightGridVariableName(const std::string &value)
{
    editSField(LightGridVariableNameFieldMask);

    _sfLightGridVariableName.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfCalcFrustumsOnCPU field.

inline
bool &ClusterShadingStageBase::editCalcFrustumsOnCPU(void)
{
    editSField(CalcFrustumsOnCPUFieldMask);

    return _sfCalcFrustumsOnCPU.getValue();
}

//! Get the value of the ClusterShadingStage::_sfCalcFrustumsOnCPU field.
inline
      bool  ClusterShadingStageBase::getCalcFrustumsOnCPU(void) const
{
    return _sfCalcFrustumsOnCPU.getValue();
}

//! Set the value of the ClusterShadingStage::_sfCalcFrustumsOnCPU field.
inline
void ClusterShadingStageBase::setCalcFrustumsOnCPU(const bool value)
{
    editSField(CalcFrustumsOnCPUFieldMask);

    _sfCalcFrustumsOnCPU.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfCullLighsOnCPU field.

inline
bool &ClusterShadingStageBase::editCullLighsOnCPU(void)
{
    editSField(CullLighsOnCPUFieldMask);

    return _sfCullLighsOnCPU.getValue();
}

//! Get the value of the ClusterShadingStage::_sfCullLighsOnCPU field.
inline
      bool  ClusterShadingStageBase::getCullLighsOnCPU(void) const
{
    return _sfCullLighsOnCPU.getValue();
}

//! Set the value of the ClusterShadingStage::_sfCullLighsOnCPU field.
inline
void ClusterShadingStageBase::setCullLighsOnCPU(const bool value)
{
    editSField(CullLighsOnCPUFieldMask);

    _sfCullLighsOnCPU.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfDisabled field.

inline
bool &ClusterShadingStageBase::editDisabled(void)
{
    editSField(DisabledFieldMask);

    return _sfDisabled.getValue();
}

//! Get the value of the ClusterShadingStage::_sfDisabled field.
inline
      bool  ClusterShadingStageBase::getDisabled(void) const
{
    return _sfDisabled.getValue();
}

//! Set the value of the ClusterShadingStage::_sfDisabled field.
inline
void ClusterShadingStageBase::setDisabled(const bool value)
{
    editSField(DisabledFieldMask);

    _sfDisabled.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfMaxLightIndexListSize field.

inline
UInt32 &ClusterShadingStageBase::editMaxLightIndexListSize(void)
{
    editSField(MaxLightIndexListSizeFieldMask);

    return _sfMaxLightIndexListSize.getValue();
}

//! Get the value of the ClusterShadingStage::_sfMaxLightIndexListSize field.
inline
      UInt32  ClusterShadingStageBase::getMaxLightIndexListSize(void) const
{
    return _sfMaxLightIndexListSize.getValue();
}

//! Set the value of the ClusterShadingStage::_sfMaxLightIndexListSize field.
inline
void ClusterShadingStageBase::setMaxLightIndexListSize(const UInt32 value)
{
    editSField(MaxLightIndexListSizeFieldMask);

    _sfMaxLightIndexListSize.setValue(value);
}
//! Get the value of the ClusterShadingStage::_sfMaxClusterLightCount field.

inline
UInt32 &ClusterShadingStageBase::editMaxClusterLightCount(void)
{
    editSField(MaxClusterLightCountFieldMask);

    return _sfMaxClusterLightCount.getValue();
}

//! Get the value of the ClusterShadingStage::_sfMaxClusterLightCount field.
inline
      UInt32  ClusterShadingStageBase::getMaxClusterLightCount(void) const
{
    return _sfMaxClusterLightCount.getValue();
}

//! Set the value of the ClusterShadingStage::_sfMaxClusterLightCount field.
inline
void ClusterShadingStageBase::setMaxClusterLightCount(const UInt32 value)
{
    editSField(MaxClusterLightCountFieldMask);

    _sfMaxClusterLightCount.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void ClusterShadingStageBase::execSync (      ClusterShadingStageBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (BlockSizeFieldMask & whichField))
        _sfBlockSize.syncWith(pFrom->_sfBlockSize);

    if(FieldBits::NoField != (TileSizeFieldMask & whichField))
        _sfTileSize.syncWith(pFrom->_sfTileSize);

    if(FieldBits::NoField != (NumClusterZFieldMask & whichField))
        _sfNumClusterZ.syncWith(pFrom->_sfNumClusterZ);

    if(FieldBits::NoField != (NearPlaneOffsetFieldMask & whichField))
        _sfNearPlaneOffset.syncWith(pFrom->_sfNearPlaneOffset);

    if(FieldBits::NoField != (DispatchDataBindingPntFieldMask & whichField))
        _sfDispatchDataBindingPnt.syncWith(pFrom->_sfDispatchDataBindingPnt);

    if(FieldBits::NoField != (ClusterDataBindingPntFieldMask & whichField))
        _sfClusterDataBindingPnt.syncWith(pFrom->_sfClusterDataBindingPnt);

    if(FieldBits::NoField != (LightBindingPntFieldMask & whichField))
        _sfLightBindingPnt.syncWith(pFrom->_sfLightBindingPnt);

    if(FieldBits::NoField != (AffectedLightIndexListBindingPntFieldMask & whichField))
        _sfAffectedLightIndexListBindingPnt.syncWith(pFrom->_sfAffectedLightIndexListBindingPnt);

    if(FieldBits::NoField != (FrustumBindingPntFieldMask & whichField))
        _sfFrustumBindingPnt.syncWith(pFrom->_sfFrustumBindingPnt);

    if(FieldBits::NoField != (LightIndexListBindingPntFieldMask & whichField))
        _sfLightIndexListBindingPnt.syncWith(pFrom->_sfLightIndexListBindingPnt);

    if(FieldBits::NoField != (LightIndexCounterBindingPntFieldMask & whichField))
        _sfLightIndexCounterBindingPnt.syncWith(pFrom->_sfLightIndexCounterBindingPnt);

    if(FieldBits::NoField != (LightGridBindingPntFieldMask & whichField))
        _sfLightGridBindingPnt.syncWith(pFrom->_sfLightGridBindingPnt);

    if(FieldBits::NoField != (AffectedLightIndexListBlockNameFieldMask & whichField))
        _sfAffectedLightIndexListBlockName.syncWith(pFrom->_sfAffectedLightIndexListBlockName);

    if(FieldBits::NoField != (AffectedLightIndexListVariableNameFieldMask & whichField))
        _sfAffectedLightIndexListVariableName.syncWith(pFrom->_sfAffectedLightIndexListVariableName);

    if(FieldBits::NoField != (LightIndexListBlockNameFieldMask & whichField))
        _sfLightIndexListBlockName.syncWith(pFrom->_sfLightIndexListBlockName);

    if(FieldBits::NoField != (LightIndexListVariableNameFieldMask & whichField))
        _sfLightIndexListVariableName.syncWith(pFrom->_sfLightIndexListVariableName);

    if(FieldBits::NoField != (ClusteringDataBlockNameFieldMask & whichField))
        _sfClusteringDataBlockName.syncWith(pFrom->_sfClusteringDataBlockName);

    if(FieldBits::NoField != (ClusteringDataVariableNameFieldMask & whichField))
        _sfClusteringDataVariableName.syncWith(pFrom->_sfClusteringDataVariableName);

    if(FieldBits::NoField != (LightGridVariableNameFieldMask & whichField))
        _sfLightGridVariableName.syncWith(pFrom->_sfLightGridVariableName);

    if(FieldBits::NoField != (CalcFrustumsOnCPUFieldMask & whichField))
        _sfCalcFrustumsOnCPU.syncWith(pFrom->_sfCalcFrustumsOnCPU);

    if(FieldBits::NoField != (CullLighsOnCPUFieldMask & whichField))
        _sfCullLighsOnCPU.syncWith(pFrom->_sfCullLighsOnCPU);

    if(FieldBits::NoField != (DisabledFieldMask & whichField))
        _sfDisabled.syncWith(pFrom->_sfDisabled);

    if(FieldBits::NoField != (MaxLightIndexListSizeFieldMask & whichField))
        _sfMaxLightIndexListSize.syncWith(pFrom->_sfMaxLightIndexListSize);

    if(FieldBits::NoField != (MaxClusterLightCountFieldMask & whichField))
        _sfMaxClusterLightCount.syncWith(pFrom->_sfMaxClusterLightCount);

    if(FieldBits::NoField != (FrustNodeFieldMask & whichField))
        _sfFrustNode.syncWith(pFrom->_sfFrustNode);

    if(FieldBits::NoField != (FrustAlgoElementFieldMask & whichField))
        _sfFrustAlgoElement.syncWith(pFrom->_sfFrustAlgoElement);

    if(FieldBits::NoField != (FrustCompShaderAlgoFieldMask & whichField))
        _sfFrustCompShaderAlgo.syncWith(pFrom->_sfFrustCompShaderAlgo);

    if(FieldBits::NoField != (CullNodeFieldMask & whichField))
        _sfCullNode.syncWith(pFrom->_sfCullNode);

    if(FieldBits::NoField != (CullAlgoElementFieldMask & whichField))
        _sfCullAlgoElement.syncWith(pFrom->_sfCullAlgoElement);

    if(FieldBits::NoField != (CullCompShaderAlgoFieldMask & whichField))
        _sfCullCompShaderAlgo.syncWith(pFrom->_sfCullCompShaderAlgo);

    if(FieldBits::NoField != (MultiLightChunkFieldMask & whichField))
        _sfMultiLightChunk.syncWith(pFrom->_sfMultiLightChunk);

    if(FieldBits::NoField != (ShaderProgChunkFieldMask & whichField))
        _sfShaderProgChunk.syncWith(pFrom->_sfShaderProgChunk);
}
#endif


inline
const Char8 *ClusterShadingStageBase::getClassname(void)
{
    return "ClusterShadingStage";
}
OSG_GEN_CONTAINERPTR(ClusterShadingStage);

OSG_END_NAMESPACE

